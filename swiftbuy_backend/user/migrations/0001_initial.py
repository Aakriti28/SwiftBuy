# Generated by Django 3.2.4 on 2022-04-27 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True, unique=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('wallet_amount', models.IntegerField(blank=True, null=True)),
                ('referral_token', models.TextField(blank=True, null=True)),
                ('role', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brand_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('brand_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('category_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Paymentgateway',
            fields=[
                ('payment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('method_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'paymentgateway',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('advertised', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('product_desc', models.TextField(blank=True, null=True)),
                ('quantity_available', models.IntegerField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.category')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.TextField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('trasaction_time', models.DateTimeField(blank=True, null=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.paymentgateway')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notif_id', models.AutoField(primary_key=True, serialize=False)),
                ('seen', models.IntegerField(blank=True, null=True)),
                ('notif_text', models.TextField(blank=True, null=True)),
                ('notif_timestamp', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Addmoney',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user.paymentgateway')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'addmoney',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('taker', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='+', serialize=False, to='user.users')),
                ('giver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'referral',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='user.users')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.product')),
            ],
            options={
                'db_table': 'wishlist',
                'unique_together': {('buyer', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('seller', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='user.users')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.product')),
            ],
            options={
                'db_table': 'transaction',
                'unique_together': {('seller', 'buyer', 'product', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='user.users')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.product')),
            ],
            options={
                'db_table': 'review',
                'unique_together': {('buyer', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Incart',
            fields=[
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='user.users')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.product')),
            ],
            options={
                'db_table': 'incart',
                'unique_together': {('buyer', 'product')},
            },
        ),
    ]
